services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-tbi}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    environment:
      - SERVICES=sqs
      - DEBUG=1
    ports:
      - "4566:4566" # LocalStack Gateway
      - "4510-4559:4510-4559" # external services port range
    volumes:
      - "/tmp/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "awslocal", "sqs", "list-queues"]
      interval: 10s
      timeout: 5s
      retries: 5

  block-synchronizer:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    command: go run cmd/block-synchronizer/main.go
    volumes:
      - .:/app
    working_dir: /app

  event-processor:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    command: go run cmd/event-processor/main.go
    volumes:
      - .:/app
    working_dir: /app

  balance-api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${API_PORT}:${API_PORT}"
    command: go run cmd/balance-api/main.go
    volumes:
      - .:/app
    working_dir: /app

volumes:
  postgres_data:
